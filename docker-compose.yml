services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
      - "465:465"
      - "80:80"

    volumes:
      - ./market_case:/market_case

    environment:
      - DB_HOST=database
      - DB_NAME=db_name
      - DB_USER=db_user
      - DB_PASS=123456
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=smtp.yandex.ru
      - EMAIL_PORT=465
      - EMAIL_HOST_USER=sokrat.mm5@yandex.ru
      - EMAIL_HOST_PASSWORD=nlqntqttlbnhcnan
      - EMAIL_USE_SSL=True
      - DEFAULT_FROM_EMAIL=sokrat.mm5@yandex.ru
      - SERVER_EMAIL=sokrat.mm5@yandex.ru
      - EMAIL_ADMIN=sokrat.mm5@yandex.ru


    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"

    depends_on:
      - database

  database:
    image: postgres:16-alpine3.18
    environment:
      - POSTGRES_DB=db_name
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=123456

    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.4-alpine
    hostname: redis

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info

    volumes:
      - ./market_case:/market_case
    links:
      - redis

    depends_on:
      - redis
      - database

    environment:
      - DB_HOST=database
      - DB_NAME=db_name
      - DB_USER=db_user
      - DB_PASS=123456


  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./market_case:/market_case
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"


volumes:
  postgres_data:
  worker:
